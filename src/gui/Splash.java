/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.IntelliJTheme;
import java.awt.Image;
import java.io.InputStream;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JRootPane;
import javax.swing.UIManager;
import model.MySQL;

/**
 *
 * @author acer
 */
public class Splash extends javax.swing.JFrame {

    private static int superadmin;

    private static int firstRun() {

        try {
            ResultSet search = MySQL.search("SELECT `user`.`user_type_id` FROM `user` WHERE `user`.`user_type_id`='1' ");
            if (search.next()) {
                superadmin = 1;
            } else {
                superadmin = 0;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return superadmin;
    }

    /**
     * Creates new form Splash
     */
    public Splash() {
        initComponents();
        Image ic = new ImageIcon(this.getClass().getResource("/resources/medicare.png")).getImage();
        this.setIconImage(ic);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0,0));

        jProgressBar1.setForeground(new java.awt.Color(255, 153, 0));
        jProgressBar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(60, 63, 65), 2, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            UIManager.setLookAndFeel(new FlatDarculaLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Splash s = new Splash();

                s.setVisible(true);

//                Runnable r = new Runnable() {
//                    @Override
//                    public void run() {
//                        for (int i = 0; i <= 100; i++) {
//                            try {
//                                s.jProgressBar1.setValue(i);
//                                Thread.sleep(50);
//                            } catch (InterruptedException ex) {
//                                ex.printStackTrace();
//                            }
//                        }
//
//                        SignIn s = new SignIn();
//                        s.setVisible(true);
//                        s.dispose();
//                    }
//                };
                Runnable r = () -> {
                    int randomsleep = 30;
                    int randomlength = 30;
                    if (randomsleep <= 50) {
                        randomlength = randomsleep;
                    }

                    for (int i = 0; i <= 100; i = i + (randomlength / 10)) {
                        try {
                            s.jProgressBar1.setValue(i);
                            int random = (int) Math.floor(Math.random() * 100);
                            Thread.sleep(randomsleep);

                            if (random <= 10) {
                                randomsleep = 10;
                            } else if (random <= 20) {
                                randomsleep = 20;
                            } else if (random <= 30) {
                                randomsleep = 30;
                            } else if (random <= 40) {
                                randomsleep = 40;
                            } else if (random <= 50) {
                                randomsleep = 50;
                            } else if (random <= 60) {
                                randomsleep = 60;
                            } else if (random <= 70) {
                                randomsleep = 70;
                            } else if (random <= 80) {
                                randomsleep = 80;
                            } else if (random <= 90) {
                                randomsleep = 90;
                            } else {
                                randomsleep = 100;
                            }
                            Thread.sleep(randomsleep);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }

                    }

                    firstRun();
                    if (superadmin == 0) {
                        SuperAdminRegistration sar = new SuperAdminRegistration();
                        sar.setVisible(true);
                        s.dispose();
                    }
                    if (superadmin == 1) {
                        SignIn s1 = new SignIn();
                        s1.setVisible(true);
                        s.dispose();
                    }

                };

                Thread t = new Thread(r);
                t.start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
